name: Publish packages

on:
  push:
    tags:
      - "*.*.*" # Must be a semver parseable tag

jobs:
  build-packages:
    uses: ./.github/workflows/packages.yml
    with:
      version: "${GITHUB_REF#refs/*/}"
    secrets:
      languages: ${{ secrets.LANGUAGES }}
      git-user-name: ${{ secrets.GIT_USER_NAME }}
      git-user-email: ${{ secrets.GIT_USER_EMAIL }}
      kotlin-registry-url: ${{ secrets.KOTLIN_REGISTRY_URL }}
      kotlin-registry-username: ${{ secrets.KOTLIN_REGISTRY_USERNAME }}
      kotlin-registry-password: ${{ secrets.KOTLIN_REGISTRY_PASSWORD }}
      swift-git-repo-url: ${{ secrets.SWIFT_GIT_REPO_URL }}

  python:
    needs: build-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            lib/target
          key: 1-${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-publish

      - name: Download python artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-python-data-${{ github.run_number }}
          path: lib/packages/python
          if-no-files-found: error

      - name: Publish Python package
        env:
          PYTHON_REGISTRY_URL: ${{ secrets.PYTHON_REGISTRY_URL }}
          PYTHON_REGISTRY_USERNAME: ${{ secrets.PYTHON_REGISTRY_USERNAME }}
          PYTHON_REGISTRY_PASSWORD: ${{ secrets.PYTHON_REGISTRY_PASSWORD }}
        # run: cargo run -p uniffi-zcash-cli publish python
        run: |
          echo "version - ${GITHUB_REF#refs/*/}"
          ls -l packages/python
  ruby:
    needs: build-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            lib/target
          key: 1-${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-publish

      - name: Download Ruby artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-ruby-data-${{ github.run_number }}
          path: lib/packages/ruby
          if-no-files-found: error

      - name: Publish
        env:
          RUBY_REGISTRY_URL: ${{ secrets.RUBY_REGISTRY_URL }}
          RUBY_REGISTRY_TOKEN: ${{ secrets.RUBY_REGISTRY_TOKEN }}
        # run: cargo run -p uniffi-zcash-cli publish ruby -v ${GITHUB_REF#refs/*/}
        run: |
          echo "version - ${GITHUB_REF#refs/*/}"
          ls -l packages/ruby

  kotlin:
    needs: build-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            lib/target
          key: 1-${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-publish

      - name: Download kotlin artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-kotlin-data-${{ github.run_number }}
          path: lib/packages/kotlin
          if-no-files-found: error

      - name: Publish Kotlin package
        env:
          KOTLIN_REGISTRY_URL: ${{ secrets.KOTLIN_REGISTRY_URL }}
          KOTLIN_REGISTRY_USERNAME: ${{ secrets.KOTLIN_REGISTRY_USERNAME }}
          KOTLIN_REGISTRY_PASSWORD: ${{ secrets.KOTLIN_REGISTRY_PASSWORD }}
        # run: cargo run -p uniffi-zcash-cli publish kotlin
        run: |
          echo "version - ${GITHUB_REF#refs/*/}"
          ls -l packages/kotlin
  swift-repo:
    needs: build-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            lib/target
          key: 1-${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-publish

      - name: Download swift artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-swift-data-${{ github.run_number }}
          path: |
            lib/packages/swift
            /tmp/zcash_uniffi_swift_package_build
          if-no-files-found: error

      - name: Publish Swift repository
        env:
          SWIFT_GIT_REPO_URL: ${{ secrets.SWIFT_GIT_REPO_URL }}
        # run: cargo run -p uniffi-zcash-cli publish swift git-repo
        run: |
          echo "version - ${GITHUB_REF#refs/*/}"
          ls -l packages/swift
          ls -l /tmp/zcash_uniffi_swift_package_build

  swift-registry:
    needs: build-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            lib/target
          key: 1-${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-publish

      - name: Download swift artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-swift-data-${{ github.run_number }}
          path: |
            lib/packages/swift
            /tmp/zcash_uniffi_swift_package_build
          if-no-files-found: error

      - name: Publish Swift package to registry
        env:
          SWIFT_REGISTRY_URL: ${{ secrets.SWIFT_REGISTRY_URL }}
          SWIFT_REGISTRY_TOKEN: ${{ secrets.SWIFT_REGISTRY_TOKEN }}
        # run: cargo run -p uniffi-zcash-cli publish swift registry -v ${GITHUB_REF#refs/*/}
        run: |
          echo "version - ${GITHUB_REF#refs/*/}"
          ls -l packages/swift
          ls -l /tmp/zcash_uniffi_swift_package_build
