on:
  push:
  # schedule:
  #   - cron: 0 0 * * * # at the end of each day

jobs:
  get-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: zcash/librustzcash
          path: librustzcash
      - uses: actions/checkout@v2
        with:
          repository: eigerco/uniffi-zcash-lib
          path: uniffi-zcash-lib

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly # public-api needs nightly installed so public-api can use rustdoc JSON output

      - name: Install linux tools
        run: sudo apt-get install -y jq curl

      - name: Get librustzcash libraries used in uniffi-zcash-lib
        run: |
          {
            echo 'USED_LIBS<<EOF'
              cargo metadata --format-version=1 --no-deps --manifest-path=./librustzcash/Cargo.toml | \
              jq -r '.packages[] | .name' | \
              xargs -I {} sh -c "cargo metadata --format-version=1 --no-deps --manifest-path=./uniffi-zcash-lib/lib/Cargo.toml | jq -r '.packages[] | .dependencies[] | .name' | grep '{}' | sort -u"
            echo EOF
          } >> "$GITHUB_ENV"

          # Generates env var for next step
          # LIBS_WITH_DIFF - list of library names, separated by ';', which are outdated (ex - 'zcash_primitives;zcash_address;')
      - name: Check for for outdated librustzcash lib versions
        env:
          CARGO_TERM_COLOR: always
        run: |
          USED_LIBS=$(echo $USED_LIBS | tr ' ' ';')
          IFS=';' read -ra arr <<< "$USED_LIBS"

          cd ./uniffi-zcash-lib/lib
          # Construct the initial part of the command
          cmd_args=("cargo" "outdated" "--format" "json")

          # Loop through each library and add its -p argument
          for lib_name in "${arr[@]}"; do
            cmd_args+=("-p" "$lib_name")
          done

          "${cmd_args[@]}" > output.json

          # Execute the constructed command and pipe its output to jq
          LIBS_WITH_DIFF=$(jq -r 'select(.crate_name | startswith("uniffi-")).dependencies[] | select(.project != .latest) | .name' output.json)

          echo "LIBS_WITH_DIFF=$LIBS_WITH_DIFF" >> $GITHUB_ENV

      - name: Diff public API changes between outdated libs
        env:
          CARGO_TERM_COLOR: always
        run: |
          echo $LIBS_WITH_DIFF
          IFS=';' read -ra arr <<< "$LIBS_WITH_DIFF"

          for lib_name in "${arr[@]}"; do
            echo $lib_name
            # if [ -z "$lib_name" ]; then
            #   continue
            # fi
            #
            # export LIB_LATEST_VERSION=$(curl --silent "https://crates.io/api/v1/crates/$lib_name" | jq -r '.crate.max_stable_version')
            # export LIB_CURRENT_VERSION=$(cargo metadata --format-version=1 -q --manifest-path=./uniffi-zcash-lib/lib/Cargo.toml | jq -r --arg lib_name "$lib_name" '.packages[] | select(.name == $lib_name) | .version')
            #
            # echo "OUT OF DATE"
            # echo "LIBRARY: $lib_name | CURRENT VERSION: $LIB_CURRENT_VERSION | LATEST VERSION: $LIB_LATEST_VERSION"
            # git -C ./librustzcash fetch -q --tags
            # git -C ./librustzcash checkout -q tags/$lib_name-$LIB_LATEST_VERSION
            # cargo +stable -q install cargo-public-api --locked
            # cargo public-api --color=always --manifest-path=./librustzcash/Cargo.toml -p "$lib_name" -sss diff "$LIB_CURRENT_VERSION" > test
            # cat test
          done
