on:
  push:
  # schedule:
  #   - cron: 0 0 * * * # at the end of each day

jobs:
  get-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: zcash/librustzcash
          path: librustzcash
      - uses: actions/checkout@v2
        with:
          repository: eigerco/uniffi-zcash-lib
          path: uniffi-zcash-lib

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install linux tools
        run: sudo apt-get install -y jq curl

      - name: Get librustzcash libraries used in uniffi-zcash-lib
        run: |
          {
            echo 'USED_LIBS<<EOF'
              cargo metadata --format-version=1 --no-deps --manifest-path=./librustzcash/Cargo.toml | \
              jq -r '.packages[] | .name' | \
              xargs -I {} sh -c "cargo metadata --format-version=1 --no-deps --manifest-path=./uniffi-zcash-lib/lib/Cargo.toml | jq -r '.packages[] | .dependencies[] | .name' | grep '{}' | sort -u"
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Check for for outdated librustzcash lib versions
        env:
          CARGO_TERM_COLOR: always
        run: |
          # Separating by spaces itererates over the fisrst element only
          # So we replace ' ' with ';' and then split by ';'
          USED_LIBS=$(echo $USED_LIBS | tr ' ' ';')
          IFS=';' read -ra arr <<< "$USED_LIBS"

          for lib_name in "${arr[@]}"; do
            if [ -z "$lib_name" ]; then
              continue
            fi

            export LIB_LATEST_VERSION=$(curl --silent "https://crates.io/api/v1/crates/$lib_name" | jq -r '.crate.max_stable_version')
            export LIB_CURRENT_VERSION=$(cargo metadata --format-version=1 -q --manifest-path=./uniffi-zcash-lib/lib/Cargo.toml | jq -r --arg lib_name "$lib_name" '.packages[] | select(.name == $lib_name) | .version')

            if [ "$LIB_LATEST_VERSION" = "$LIB_CURRENT_VERSION" ]; then
              LIBS_WITHOUT_DIFF="${LIBS_WITHOUT_DIFF}${lib_name};"
              echo "LIBS_WITHOUT_DIFF=$LIBS_WITHOUT_DIFF" >> $GITHUB_ENV
            else
              LIBS_WITH_DIFF="${LIBS_WITH_DIFF}${lib_name};"
              echo "LIBS_WITH_DIFF=$LIBS_WITH_DIFF" >> $GITHUB_ENV
            fi
          done

      - name: Install nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - name: Install cargo-public-api
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: public-api

      - name: Diff public API changes between outdated libs
        env:
          CARGO_TERM_COLOR: always
        run: |
          IFS=';' read -ra arr <<< "$LIBS_WITH_DIFF"

          for lib_name in "${arr[@]}"; do
            if [ -z "$lib_name" ]; then
              continue
            fi

            export LIB_LATEST_VERSION=$(curl --silent "https://crates.io/api/v1/crates/$lib_name" | jq -r '.crate.max_stable_version')
            export LIB_CURRENT_VERSION=$(cargo metadata --format-version=1 -q --manifest-path=./uniffi-zcash-lib/lib/Cargo.toml | jq -r --arg lib_name "$lib_name" '.packages[] | select(.name == $lib_name) | .version')

            echo "OUT OF DATE"
            echo "LIBRARY: $lib_name | CURRENT VERSION: $LIB_CURRENT_VERSION | LATEST VERSION: $LIB_LATEST_VERSION"
            git -C ./librustzcash fetch -q --tags
            git -C ./librustzcash checkout -q tags/$lib_name-$LIB_LATEST_VERSION
            # rustup -q install nightly --profile minimal # TODO: Try to put this and the next line in the action above
            # cargo +stable -q install cargo-public-api --locked
            cargo public-api --color=always --manifest-path=./librustzcash/Cargo.toml -p "$lib_name" -sss diff "$LIB_CURRENT_VERSION"
          done
                    # TO READ ON MAC (DELETE LATER)
          # IFS=$'\n' read -r -d '' -a env_var_list <<< "$USED_LIBS"

          # for crate_name in "${env_var_list[@]}"; do
            # echo $crate_name
          # done
