on:
  push:
  # schedule:
  #   - cron: 0 0 * * * # at the end of each day

jobs:
  get-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: zcash/librustzcash
          path: librustzcash
      - uses: actions/checkout@v2
        with:
          repository: eigerco/uniffi-zcash-lib
          path: uniffi-zcash-lib

      - name: ls
        run: |
          ls -la
          pwd
          bash --version

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install linux tools
        run: sudo apt-get install -y jq curl

      - name: Get librustzcash libraries used in uniffi-zcash-lib
        run: |
          {
            echo 'USED_LIBS<<EOF'
              cargo metadata --format-version=1 --no-deps --manifest-path=/home/runner/work/uniffi-zcash-lib/uniffi-zcash-lib/librustzcash/Cargo.toml | \
              jq -r '.packages[] | .name' | \
              xargs -I {} sh -c "cargo metadata --format-version=1 --no-deps --manifest-path=/home/runner/work/uniffi-zcash-lib/uniffi-zcash-lib/uniffi-zcash-lib/lib/Cargo.toml | jq -r '.packages[] | .dependencies[] | .name' | grep '{}' | sort -u"
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Check for diffs of outdated versions of librustzcash dependencies and public API changes
        run: |
          IFS=$'\n' read -r -d '' -a env_var_list <<< "$USED_LIBS"

          echo "$USED_LIBS" | while IFS= read -r crate_name; do
              if [ -z "$crate_name" ]; then
                  continue
              fi

              export CRATE_LATEST_VERSION=$(curl --silent "https://crates.io/api/v1/crates/$crate_name" | jq -r '.crate.max_stable_version')
              export CRATE_CURRENT_VERSION=$(cargo metadata --format-version=1 -q --manifest-path=../uniffi-zcash-lib/lib/Cargo.toml | jq -r --arg crate_name "$crate_name" '.packages[] | select(.name == $crate_name) | .version')

              if [ "$CRATE_LATEST_VERSION" = "$CRATE_CURRENT_VERSION" ]; then
                  echo "$crate_name is up to date. Nothing to do."
                  exit 0
              else
                  echo "$crate_name is out of date."
                  echo "latest - $CRATE_LATEST_VERSION"
                  echo "current - $CRATE_CURRENT_VERSION"
                  git checkout -q "tags/$crate_name-$CRATE_LATEST_VERSION"
                  cargo -q public-api -p "$crate_name" -sss diff "$CRATE_CURRENT_VERSION"
              fi
          done

          # TO READ ON MAC (DELETE LATER)
          # IFS=$'\n' read -r -d '' -a env_var_list <<< "$USED_LIBS"

          # for crate_name in "${env_var_list[@]}"; do
            # echo $crate_name
          # done
