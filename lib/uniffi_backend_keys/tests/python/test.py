import unittest
from backend_keys import *

class Test(unittest.TestCase):
    network = Network.MAIN

    seed = list(range(32))

    usk = ZcashUnifiedSpendingKey(
        network=Network.MAIN,
        transparent=ZcashAccountPrivKey(data=[
            250, 223, 171, 71, 1, 138, 92, 230, 79, 2, 241, 213, 34, 245, 195,
            255, 185, 20, 220, 13, 14, 51, 155, 231, 50, 175, 202, 72, 249, 35,
            94, 164, 155, 160, 67, 156, 106, 45, 61, 144, 56, 131, 212,
            83, 124, 54, 34, 136, 98, 109, 166, 44, 98, 153, 1,
            46, 54, 45, 143, 182, 239, 235, 171, 71
        ]),
        sapling=ZcashExtendedSpendingKey(data=[
            3, 55, 45, 139, 67, 0, 0, 0, 128, 78, 90, 121, 143, 208, 223, 107,
            194, 177, 35, 140, 239, 87, 149, 110, 243, 85, 40, 184, 122, 75,
            38, 202, 62, 238, 178, 139, 16, 138, 160, 174, 146, 141, 149, 165,
            183, 58, 50, 17, 109, 17, 226, 211, 146, 234, 25, 168, 222, 43,
            155, 88, 122, 154, 25, 149, 213, 215, 253, 72, 96, 38, 214, 245,
            11, 159, 159, 72, 210, 121, 120, 128, 180, 172, 118, 3, 0, 87, 139,
            139, 153, 197, 112, 86, 161, 170, 80, 57, 170, 16, 50, 116, 151,
            154, 28, 22, 12, 142, 232, 44, 148, 53, 72, 212, 227, 63, 79, 163,
            7, 170, 180, 28, 11, 4, 133, 26, 33, 219, 188, 21, 146, 136, 107,
            109, 168, 178, 198, 190, 109, 143, 124, 7, 250, 26, 45, 175, 16,
            205, 225, 55, 239, 245, 125, 88, 241, 47, 31, 217, 248, 190, 4, 88,
            103, 36, 155, 84, 159, 5, 169, 0, 64
        ]),
        orchard=ZcashSpendingKey(data=[
            182, 125, 141, 135, 202, 185, 24, 149, 0, 175, 180, 93, 188, 169,
            249, 44, 146, 76, 29, 233, 217, 238, 20, 81, 190, 74, 120, 49, 60,
            178, 35, 180
        ]),
        binary=[
            180, 208, 214, 194, 3, 32, 182, 125, 141, 135, 202, 185, 24, 149,
            0, 175, 180, 93, 188, 169, 249, 44, 146, 76, 29, 233, 217, 238, 20,
            81, 190, 74, 120, 49, 60, 178, 35, 180, 2, 169, 3, 55, 45, 139, 67,
            0, 0, 0, 128, 78, 90, 121, 143, 208, 223, 107, 194, 177, 35, 140,
            239, 87, 149, 110, 243, 85, 40, 184, 122, 75, 38, 202, 62, 238,
            178, 139, 16, 138, 160, 174, 146, 141, 149, 165, 183, 58, 50, 17,
            109, 17, 226, 211, 146, 234, 25, 168, 222, 43, 155, 88, 122, 154,
            25, 149, 213, 215, 253, 72, 96, 38, 214, 245, 11, 159, 159, 72,
            210, 121, 120, 128, 180, 172, 118, 3, 0, 87, 139, 139, 153, 197,
            112, 86, 161, 170, 80, 57, 170, 16, 50, 116, 151, 154, 28, 22, 12,
            142, 232, 44, 148, 53, 72, 212, 227, 63, 79, 163, 7, 170, 180, 28,
            11, 4, 133, 26, 33, 219, 188, 21, 146, 136, 107, 109, 168, 178,
            198, 190, 109, 143, 124, 7, 250, 26, 45, 175, 16, 205, 225, 55,
            239, 245, 125, 88, 241, 47, 31, 217, 248, 190, 4, 88, 103, 36, 155,
            84, 159, 5, 169, 0, 64, 0, 64, 250, 223, 171, 71, 1, 138, 92, 230,
            79, 2, 241, 213, 34, 245, 195, 255, 185, 20, 220, 13, 14, 51, 155,
            231, 50, 175, 202, 72, 249, 35, 94, 164, 155, 160, 67, 156, 106,
            45, 61, 144, 56, 131, 212, 83, 124, 54, 34, 136, 98, 109, 166, 44,
            98, 153, 1, 46, 54, 45, 143, 182, 239, 235, 171, 71
        ])

    ufvk = ZcashUnifiedFullViewingKey(
        transparent=ZcashAccountPubKey(data=[
            155, 160, 67, 156, 106, 45, 61, 144, 56, 131, 212, 83, 124, 54, 34,
            136, 98, 109, 166, 44, 98, 153, 1, 46, 54, 45, 143, 182, 239, 235,
            171, 71, 2, 237, 99, 133, 50, 196, 117, 246, 116, 0, 53, 15, 177,
            214, 237, 165, 89, 205, 194, 137, 161, 155, 67, 25, 235,
            23, 81, 64, 170, 134, 137, 56, 54
        ]),
        sapling=ZcashDiversifiableFullViewingKey(data=[
            49, 210, 193, 209, 42, 132, 36, 218, 122, 87, 25, 133, 201, 16, 9,
            15, 174, 173, 10, 217, 55, 215, 144, 104, 98, 122, 250, 225, 145,
            108, 220, 193, 238, 195, 114, 170, 36, 2, 206, 114, 97, 31, 199,
            50, 231, 78, 49, 156, 69, 82, 211, 9, 27, 225, 203, 210, 232, 85,
            147, 53, 184, 7, 192, 181, 142, 232, 44, 148, 53, 72, 212, 227, 63,
            79, 163, 7, 170, 180, 28, 11, 4, 133, 26, 33, 219, 188, 21, 146,
            136, 107, 109, 168, 178, 198, 190, 109, 143, 124, 7, 250, 26, 45,
            175, 16, 205, 225, 55, 239, 245, 125, 88, 241, 47, 31, 217, 248,
            190, 4, 88, 103, 36, 155, 84, 159, 5, 169, 0, 64
        ]),
        orchard=ZcashFullViewingKey(data=[
            118, 72, 118, 74, 69, 103, 183, 22, 84, 16, 188, 49, 63, 146, 43,
            114, 250, 52, 21, 61, 202, 209, 18, 163, 151, 22, 32, 36, 15, 251,
            243, 13, 127, 25, 237, 185, 242, 149, 205, 241, 96, 190, 24, 99,
            180, 28, 150, 49, 45, 175, 114, 115, 186, 1, 25, 143, 80, 102, 242,
            134, 41, 181, 111, 23, 228, 171, 114, 101, 121, 238, 160, 251, 25,
            171, 90, 226, 184, 136, 156, 228, 85, 199, 156, 89, 89, 191, 218,
            121, 104, 35, 238, 128, 92, 121, 72, 20
        ]),
        encoded=
        """uview1s7tc5lj2vlldc89g9q9nkjpzzhjpjdgpn2ej3te5xa3pw5nzuty99h42cqya7mj82mv5ynmv
        7z8tm7tjyp97xcvxt4aaw3uks0vhc3hwucx679l8ktga3qe75pdfsggpjzj35988xz6kxvkjgd258js0xmjpyzju6
        f7lpnp24f05984rmadavdrjv9z53x636e6qu4xu6nlexrs6ycj9kys2dejqr7p6yeu4eaun44pxlrx5dtj4rzwek3
        ua3semr724fd980feqwz3fe43cyg785dv6jazn7ttxh22ve2536u50qk6jjelq85kneeauxqksyg76ca8ff6zrgd5
        rtdeph3u7cv5rlg3qv330ny3zz9nywzyu556qpj4h6lzs7au7e04xaxp49erwqywfu8y8dae7cj8ul79jffmx0nl2
        rqaccycyfmwt2tqghnm5euzzjejvqvx23eddgmmjv4jqmdpenlkqlg06kv2jglrw08g5yse846wr"""
        .replace('\n', '').replace(' ', ''))

    ovk = ZcashOutgoingViewingKey(data=[142, 232, 44, 148, 53, 72, 212, 227, 63, 79, 163, 7, 170, 180, 28, 11, 4, 133, 26, 33, 219, 188, 21, 146, 136, 107, 109, 168, 178, 198, 190, 109])

    ivk = ZcashSaplingIvk(data=[210, 137, 216, 235, 240, 243, 45, 205, 15, 249, 27, 47, 128, 182, 8, 86, 175, 194, 243, 37, 3, 94, 31, 172, 245, 4, 56, 144, 36, 155, 137, 1])

    def test_unified_sk_from_seed(self):
        usk = unified_sk_from_seed(self.network, self.seed, 0)
        self.assertEqual(usk, self.usk)

    def test_unified_fvk_from_usk(self):
        ufvk = unified_fvk_from_usk(self.usk)
        self.assertEqual(ufvk, self.ufvk)

    def test_deserialize_ufvk(self):
        enc_ufvk = self.ufvk.encoded
        ufvk = deserialize_ufvk(enc_ufvk, self.network)
        self.assertEqual(ufvk, self.ufvk)

    def test_ovk_from_ufvk(self):
        encoded = self.ufvk.encoded
        ovk = ovk_from_ufvk(encoded, self.network, Scope.EXTERNAL)
        self.assertEqual(ovk, self.ovk)

    def test_ivk_from_ufvk(self):
        encoded = self.ufvk.encoded
        ivk = ivk_from_ufvk(encoded, self.network, Scope.EXTERNAL)
        self.assertEqual(ivk, self.ivk)
        
    def test_account_private_key_from_bytes(self):
        byttes = list(range(32))
        data = ZcashAccountPrivKey(byttes)
        self.assertEqual(from_bytes(byttes), data)

    def test_account_private_key_from_seed(self):
        byttes = list(range(1, 33))
        from_seed_above = [
            92, 250, 175, 77, 90, 67, 160, 51, 80, 172, 198, 215, 225, 26, 200,
            85, 75, 221, 126, 85, 70, 217, 7, 14, 33, 91, 162, 40, 0, 118, 207,
            136, 189, 22, 188, 25, 102, 198, 36, 40, 69, 81, 23, 9, 58, 204,
            143, 227, 80, 31, 181, 2, 116, 145, 106, 21, 80, 198, 40, 246, 119,
            26, 102, 63
        ]
        data = ZcashAccountPrivKey(from_seed_above)
        self.assertEqual(from_seed(byttes, 0), data)

if __name__ == '__main__':
    unittest.main()
