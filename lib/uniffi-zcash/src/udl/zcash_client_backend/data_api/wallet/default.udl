
interface WalletDefault {
	[Throws=ZcashError]
	void decrypt_and_store_transaction(ZcashConsensusParameters params, ZcashWalletDb z_db_data, ZcashTransaction tx);

	[Throws=ZcashError]
	ZcashTxId spend_main(ZcashWalletDb z_db_data, ZcashConsensusParameters params, ZcashLocalTxProver prover, ZcashMainGreedyInputSelector input_selector, ZcashUnifiedSpendingKey usk, ZcashTransactionRequest request, ZcashOvkPolicy ovk_policy, u32 min_confirmations);

	[Throws=ZcashError]
	ZcashTxId spend_test(ZcashWalletDb z_db_data, ZcashConsensusParameters params, ZcashLocalTxProver prover, ZcashTestGreedyInputSelector input_selector, ZcashUnifiedSpendingKey usk, ZcashTransactionRequest request, ZcashOvkPolicy ovk_policy, u32 min_confirmations);

	[Throws=ZcashError]
	ZcashTxId shield_transparent_funds(ZcashWalletDb z_db_data, ZcashConsensusParameters params, ZcashLocalTxProver prover, ZcashGreedyInputSelector input_selector, u64 shielding_threshold, ZcashUnifiedSpendingKey usk, sequence<ZcashTransparentAddress> from_addrs, ZcashMemoBytes memo, u32 min_confirmations);
};
